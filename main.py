import telebot
import random
from telebot import types

# –°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ —Ç–∞ —ó—Ö –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
phrases = [
    ("–Ω–∞–ø–µ–≤–Ω–æ, —â–æ –Ω—ñ", "probably not", "audio/Probably_not"),
    ("—è —Ç–∞–∫ –Ω–µ –≤–≤–∞–∂–∞—é", "I don`t think so", "audio/I don`t think so.mp3"),
    ("—Ü–µ –º–∞–ª–æ–π–º–æ–≤—ñ—Ä–Ω–æ", "It`s not very likely", "audio/It`s not very likely.mp3"),
    ("—à–≤–∏–¥—à–µ –∑–∞ –≤—Å–µ, —â–æ...", "odds are that...", "audio/Odds are that....mp3"),
    ("—è –ø–µ—Ä–µ–∫–æ–Ω–∞–Ω–∏–π, —â–æ...", "I`m convinced that...", "audio/I`m convinced that....mp3"),
    ("—è –Ω–µ —Å—É–º–Ω—ñ–≤–∞—é—Å—è, —â–æ...", "I have no doubt that‚Ä¶", "audio/I have no doubt that‚Ä¶.mp3"),
    ("—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤–ø–µ–≤–Ω–µ–Ω–∏–π", "I`m absolutely sure", "audio/I`m absolutely sure.mp3"),
    ("—è –¥—É–∂–µ —Å—É–º–Ω—ñ–≤–∞—é—Å—è –≤ —Ü—å–æ–º—É", "I seriously doubt it", "audio/I seriously doubt it.mp3"),
    ("—ñ—Å–Ω—É—î –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ...", "chances are that...", "audio/Chances are that....mp3"),
    ("—ñ–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Ü—å–æ–≥–æ –Ω–µ–≤–µ–ª–∏–∫–∞", "there`s not much chance of that", "audio/There's not much chance of that.mp3"),
    ("—è –Ω–∞ —Å—Ç–æ –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –≤–ø–µ–≤–Ω–µ–Ω–∏–π", "I`m a hundred percent certain", "audio/I`m a hundred percent certain.mp3"),
    ("—è –±—É–≤ –±–∏ –¥—É–∂–µ –∑–¥–∏–≤–æ–≤–∞–Ω–∏–π, —è–∫–±–∏ —Ü–µ —Å—Ç–∞–ª–æ—Å—è", "I`d be very surprised if that happened", "audio/I`d be very surprised if that happened.mp3")
]

# –°–ª–æ–≤–Ω–∏–∫, —â–æ –º—ñ—Å—Ç–∏—Ç—å –æ–±'—î–∫—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
users = {}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º
bot = telebot.TeleBot("591620628:AAHtfHRbK4v5z56is4WBHpRc8IZ6S_2qxqU")


# –ö–ª–∞—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!
class User:
    def __init__(self):
        self.phrase = ""
        self.translation = ""
        self.used_phrases = []
        self.audio_path = []

@bot.message_handler(commands=['help'])
def help(message):
    try:
        user_id = message.from_user.id
        user = choose_phrase(users[user_id])
        phrase = user.translation
        audio_path = user.audio_path
        bot.send_audio(message.chat.id, audio=open(audio_path, 'rb'))
        bot.send_message(message.chat.id, f'<b>{phrase}</b>', parse_mode='html')
    except:
        bot.send_message(message.chat.id, "start with command /start")
# # –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.from_user.id
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –≤—ñ–Ω –Ω–µ —ñ—Å–Ω—É—î
    if not user_id in users:
        users[user_id] = User()


    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button_1 = types.KeyboardButton('probably not')
    button_2 = types.KeyboardButton('I don`t think so')
    button_3 = types.KeyboardButton('It`s not very likely')
    button_4 = types.KeyboardButton('odds are that...')
    button_5 = types.KeyboardButton('I`m convinced that...')
    button_6 = types.KeyboardButton('I have no doubt that‚Ä¶')
    button_7 = types.KeyboardButton('I`m absolutely sure')
    button_8 = types.KeyboardButton('I seriously doubt it')
    button_9 = types.KeyboardButton('chances are that...')
    button_10 = types.KeyboardButton('there`s not much chance of that')
    button_11 = types.KeyboardButton('I`m a hundred percent certain')
    button_12 = types.KeyboardButton('I`d be very surprised if that happened')
    murkup.add(button_1, button_2, button_3, button_4, button_5, button_6, button_7, button_8, button_9, button_10,
               button_11, button_12)
    # –í–∏–±—ñ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó —Ñ—Ä–∞–∑–∏ —Ç–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É
    user = choose_phrase(users[user_id])
    phrase = user.phrase
    audio_path = user.audio_path
    bot.send_message(message.chat.id, f"Hello {message.chat.first_name}, let's learn useful phrases")
    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–∫–ª–∞–¥–∏ –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É: {phrase}", reply_markup=murkup)
# –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.from_user.id
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –≤—ñ–Ω –Ω–µ —ñ—Å–Ω—É—î
    if not user_id in users:
        users[user_id] = User()
    check_translation(message)

# –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def check_translation(message):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.from_user.id

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–æ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —Ç–∞ –æ–±'—î–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_answer = message.text.lower().strip()
    user = users.get(user_id)
    audio_path = user.audio_path

    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button_1 = types.KeyboardButton('probably not')
    button_2 = types.KeyboardButton('I don`t think so')
    button_3 = types.KeyboardButton('It`s not very likely')
    button_4 = types.KeyboardButton('odds are that...')
    button_5 = types.KeyboardButton('I`m convinced that...')
    button_6 = types.KeyboardButton('I have no doubt that‚Ä¶')
    button_7 = types.KeyboardButton('I`m absolutely sure')
    button_8 = types.KeyboardButton('I seriously doubt it')
    button_9 = types.KeyboardButton('chances are that...')
    button_10 = types.KeyboardButton('there`s not much chance of that')
    button_11 = types.KeyboardButton('I`m a hundred percent certain')
    button_12 = types.KeyboardButton('I`d be very surprised if that happened')
    murkup.add(button_1, button_2, button_3, button_4, button_5, button_6, button_7, button_8, button_9, button_10,
               button_11, button_12)
    if not user:
        user = User()
        users[user_id] = user
        choose_phrase(user)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    correct_answer = user.translation.lower()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_answer == correct_answer:
        bot.send_message(message.chat.id, f"Congratulationsüéâüéâüéâ, {message.chat.first_name}! \"{message.text}\" is the correct answer!\npress any key to continue..")
        bot.send_audio(message.chat.id, audio=open(audio_path, 'rb'))
        choose_phrase(user)
        phrase = user.phrase
        bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–∫–ª–∞–¥–∏ –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É: <b> {phrase}</b>", reply_markup=murkup, parse_mode='html')
    else:
        bot.send_message(message.chat.id, f"Wrong. Try again \n/help")

# –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–±–∏—Ä–∞—î –Ω–æ–≤—É —Ñ—Ä–∞–∑—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def choose_phrase(user):
    # –í–∏–±—ñ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–æ—ó —Ñ—Ä–∞–∑–∏ —Ç–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É
    phrase, translation, audio = random.choice(phrases)

    # # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ñ—Ä–∞–∑–∞ –≤–∂–µ –±—É–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∞
    # while phrase in user.used_phrases:
    #     phrase, translation, audio = random.choice(phrases)
    # # –î–æ–¥–∞–≤–ª–µ–Ω–Ω—è —Ñ—Ä–∞–∑–∏ –¥–æ —Å–ø–∏—Å–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏—Ö
    # user.used_phrases.append(phrase)
    # # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—ñ —Ñ—Ä–∞–∑–∏ –≤–∂–µ –±—É–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ
    # if len(user.used_phrases) == len(phrases):
    #     user.used_phrases = []

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ—Ä–∞–∑–∏ —Ç–∞ —ó—ó –ø–µ—Ä–µ–∫–ª–∞–¥—É –¥–æ –æ–±'—î–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user.phrase = phrase
    user.translation = translation
    user.audio_path = audio
    return user

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()